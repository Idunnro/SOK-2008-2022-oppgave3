#Importerer datasett med arbeidsløshet i prosent fra ssb

#ALle utdanningsnivåer:
#Ungdommer i alderen: 15-24 år 
#Voksne i alderen 20-64 år 
---------------------------------------------------------------------------------
# Laster inn datasett
  
options(encoding = UTF-8)

library(ggplot2)
library(tidyverse)
library(dplyr)
library(rjstat)
library(httr)
library(tidyr)
library(janitor)

#Utfordring 3.1.1

url <- "https://www.ssb.no/statbank/sq/10072738"

data <- '
{"query":
[{"code":"Makrost","selection":{"filter":"item","values": ["koh.nrpriv","koo.nroff","bif.nr83_6","makrok.nrianv","eks.nrtot","imp.nrtot","bnpb.nr23_9","bnpb.nr23_9fn","bnpb.nr23oljsj"]}},{"code":"ContentsCode","selection":{"filter":"item","values":["Priser","Faste","PriserSesJust"]}},{"code":"Tid","selection":{"filter":"top","values":["8"]}}],
"response":{"format":"json-stat2"}}
'

d.tmp <- POST(url , body = data, encode = "json", verbose())

table <- fromJSONstat(content(d.tmp, "text"))

# Lager datasettet om til en tibble
table <- table %>% 
  as_tibble()

#Lager et nytt navn til datasettet
arbeidsløshet <- table

#Bruker filter til å filtre ut året 2020
arbeidsløshet <- arbeidsløshet %>% 
  filter(år == 2020)

# Lager en graf for begge aldersgruppene i år 2020
ggplot(arbeidsløshet, aes(y = value,x= alder, fill = alder))+
  geom_col()+
  labs(title = "Arbeidsløshet mellom aldersgrupper 2020",
       x="Aldergruppe", y = "Prosent")



-----------------------------------------------------------------------------------------------------------
# Utfordring 3.1.2

#Laster ned nødvendige pakker
install.packages("OCED")
library(OECD)#The OECD package
library(ggplot2)     # the ggplot package
library(tidyverse)  # the tidyverse package
library(dplyr)# The DPLYR package
install.packages("ggrepel")
library(ggrepel) # The ggrepel package

#We want to create a graph that shows the correlation between minimum wages and unemployment. We need to search the OECD data frame for data on these topics.
#Search data set for minimum wages and unemployment statistics
dsets<-get_datasets()
search_dataset("wage",dsets)
search_dataset("unemployment",dsets)

#Data on minimum wages is available in "MIN2AVE"
#Data on unemployment is available in "MIG_NUP_RATES_GENDER"

#MinWage
minwage <- get_dataset("MIN2AVE",
                       filter = "USA+CAN+FRA+GBR+DEU+NZL", 
                       pre_formatted = TRUE)
#Selecting years and the min wage as a share of median wage
minwage2019 <- subset(minwage, Time < 2019 & Time >2007 & SERIES=="MEDIAN")
minwage2007_2019 <- subset(minwage2019, Time>2007)

#UnEmpl
unempl <- get_dataset("MIG_NUP_RATES_GENDER",
                      filter = "USA+CAN+FRA+GBR+DEU+NZL", 
                      pre_formatted = TRUE)

#Selecting years, the unemployment rate of people born in the country, and both sexes
unempl2019 <- subset(unempl, Time<2019 & RATE=="U_RATE" & BIRTH=="NB" & GENDER=="TOT")
unempl2007_2019 <- subset(unempl2019, Time>2007)

#Combining datasets - we need to merge by both country and year to get the right number in the right place
minwage_unempl <-left_join(minwage2007_2019, unempl2007_2019, by=c("COUNTRY","Time"))

#removing countries with missing data
complete_minwage_unempl <- na.omit(minwage_unempl)

#transforming the minimum wage and uneployment rate to numeric variables
complete_minwage_unempl$MinWage_0 <-as.numeric(complete_minwage_unempl$ObsValue.x) #MinWage is between 0 and 1, I want to transform it to between 0 and 100 later, so I call it MinWage_0 here
complete_minwage_unempl$UnEmpl <-as.numeric(complete_minwage_unempl$ObsValue.y)

#Transforming Minimum wage to percent
complete_minwage_unempl$MinWage <- complete_minwage_unempl$MinWage_0 * 100


#Code for the graph (you need to insert data and variable names)
minwage_plot <- ggplot(data=complete_minwage_unempl,aes(x=UnEmpl,y=MinWage, group=COUNTRY, color=COUNTRY)) + # Put unemployment in percent on the x-axis and min wage as percent of median wage on y-axis
  geom_line(aes(group=COUNTRY), size=1) +
  geom_point(size=2.5)+
  labs(x = "Unemployment in percent" , y ="Min Wage as percent")  + #Insert names for x and y-axis.
  theme(legend.position="none")+
  geom_label_repel(
    data = complete_minwage_unempl %>% group_by(COUNTRY) %>% #Insert name of data
      filter(UnEmpl == min(UnEmpl)), # Insert the name of the x-variable. This will put the country name at the start of each country line.
    aes(UnEmpl, MinWage, fill = factor(COUNTRY), label = sprintf('%s', COUNTRY)), #Insert name for x and y variable
    color = "black", # the color of the line around the country tag
    fill = "white")+
  geom_label_repel(
    data = complete_minwage_unempl,#Insert name of data
       # Insert the name of the x-variable. This will put the country name at the start of each country line.
    aes(label = (Time)), #Insert name for x and y variable
    color = "black", # the color of the line around the country tag
    fill = "white")#The color of the fill of the country tag
minwage_plot






  
  
# Kode som ikke ble brukt:

#Bruker pivot_wider til å utvider datasettet
#arbeidsløshet = arbeidsløshet %>%
#  pivot_wider(names_from = alder ,values_from=value)
#arbeidsløshet

#arbeid <- arbeidløshet %>% (group_by = 'alder')
  #arbeidsløshet_plot <- ggplot(arbeidsløshet, aes(x = ar)) +  
  #geom_line(aes(y = x20_64_ar), color = "black") +
  #geom_line(aes(y = x15_24_ar), color = "red") +

#ggplot(arbeidsløshet, aes(x= ar) +
 # geom_line(aes(y = x20_64_ar) +
 # geom_line(aes(y = x15_24_ar)) +
  
  #ggplot(data=arbeidsløshet, aes(x=ar, y="statistikkvariabel", group_by = alder)) +
  #geom_line() +

#arbeidsløshet = ({'år':['2006', '2007', '2008', '2009', '2010', '2011', '2012','2013', '2014',
                                   # '2015','2016','2017', '2018', '2019', '2020'], 'prosent':[3.0, 9.2, 2.1, 7.4, 2.2, 8.0,
                                                                                             # 2.8, 9.3, 3.3, 10.1, 3.0, 8.9, 2.9,
                                                                                            # 8.8, 3.4, 9.7, 3.4, 8.1, 4.1, 10.5, 4.3, 11.3, 3.8,
                                                                                             # 10.8 , 3.5, 9.6, 3.3, 9.9, 4.1, 11.5]})
